// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  idUser    Int     @default(autoincrement()) @id
  email String  @unique // el email es unico
  name  String?
  password String 
  posts Post[]
  items Items[] // relacion de uno a muchos con items 
  productos Productos[] // relacion de uno a muchos con productos
}

model Post {
  idPost        Int      @default(autoincrement()) @id
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [idUser])
  authorId  Int?
}

model Items {
    idItems        Int      @default(autoincrement()) @id
    name      String
    description     String? // el signo de interrogacion es para que sea opcional
    // user      User?    @relation(fields: [userId], references: [idUser]) // relacion de uno a muchos con user
    user           User?    @relation(fields: [userId], references: [idUser], onDelete: Restrict, onUpdate: Restrict) // relacion de uno a muchos con user con restriccion de borrado y actualizacion sirve para que no se borre el usuario si tiene items relacionados
    userId    Int?
}

model Productos {
    idProducto      Int     @default(autoincrement()) @id
    nombre          String 
    descripcion     String
    fehcaCreacion   DateTime   @default(now())
    fechaActualizacion DateTime   @updatedAt
    precio          Float
    user           User?    @relation(fields: [userId], references: [idUser], onDelete: Restrict, onUpdate: Restrict) // relacion de uno a muchos con user con restriccion de borrado y actualizacion sirve para que no se borre el usuario si tiene items relacionados
    userId Int?
}

model plazo {
  idPlazo                                               Int @id @default(autoincrement())
  nombre                                                String @db.VarChar(100)
  codigo                                                Int
  descripcion                                           String @db.VarChar(100)
  createdAt                                             DateTime @db.DateTime @default(dbgenerated("NOW()"))
  updatedAt                                             DateTime @db.DateTime @default(dbgenerated("NOW() ON UPDATE NOW()"))
  activo                                                Boolean @default(true)
}

model pais_mh {
  idPais                                                Int @id @default(autoincrement())
  codigo                                                Int
  nombre                                                String @db.VarChar(100)
  departamentos                                         departamento_mh[]
}

model departamento_mh {
  idDepartamento                                        Int         @id @default(autoincrement())
  nombre                                                String @db.VarChar(100)
  codigo                                                Int
  descripcion                                           String @db.VarChar(100)
  zona                                                  String @db.VarChar(100)
  idPais                                                Int
  pais                                                  pais_mh        @relation(fields: [idPais], references: [idPais])
  municipios                                            municipio_mh[]

  @@index([idPais], name: "idx_id_pais")
}

model municipio_mh {
  idMunicipio                                            Int         @id @default(autoincrement())
  codigo                                                 Int
  descripcion                                            String @db.VarChar(100)
  idDepartamento                                         Int
  departamento departamento_mh                           @relation(fields: [idDepartamento], references: [idDepartamento])

  @@index([idDepartamento], name: "idx_id_departamento")
}
